
version: 2.1
orbs:
  secrethub: secrethub/cli@1.0.0
jobs:
  docker_build_belenios_tool:
    machine:
      image: 'ubuntu-2004:202010-01'    # recommended linux image - includes Ubuntu 16.04, docker 18.09.3, docker-compose 1.23.1
      # resource_class: medium
      # docker_layer_caching: true    # default - false # requires a Circle CI plan that includes [Docker layer caching feature]
    environment:
      DESIRED_DOCKER_TAG: 5.27.1
    steps:
      - checkout
      - secrethub/install
      - run:
          name: "Testing local docker installation"
          command: docker version
      - run: # print the name of the branch we're on
          name: "Docker build the belenios-tool"
          command: |
                    pwd
                    ls -allh
                    # export DESIRED_DOCKER_TAG=$(git describe --match "[0-999].[0-999].[0-999]" --abbrev=0 --tags)
                    export DESIRED_DOCKER_TAG=$(git describe --abbrev=0 --tags)
                    export DESIRED_DOCKER_TAG="${DESIRED_DOCKER_TAG}-$(git rev-parse --short HEAD)"
                    # docker build -t "quay.io/gravitee-lab/cicd-orchestrator:${DESIRED_DOCKER_TAG}" --build-arg GIT_COMMIT=$(git rev-parse HEAD) -f ./Dockerfile

                    # --------------------
                    ./prepare.env.sh

                    ./build-belenios-tool-runner.sh
      - run: # print the name of the branch we're on
          name: "Test running the belenios-tool"
          command: |
                    # --- #
                    # -- Now you can use the belenios tool runner (its only dependency is the 'libgmp-dev' debian package) :
                    docker exec -it belenios_tool_runtime_build bash -c "belenios-tool --version"

                    # ---
                    # Now, just like in https://github.com/glondu/belenios/blob/1.13/tests/tool/demo.sh
                    # --
                    # Setup election
                    export ELECTION_UUID=$(docker exec -it belenios_tool_runtime_build bash -c "belenios-tool generate-token")
                    echo
                    echo "=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+="
                    echo
                    echo " Example using Belenios Tool : generate the UUID of a new election"
                    echo
                    echo " Generated Election UUID is [$ELECTION_UUID]"
                    echo
                    echo "=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+="
                    echo
                    ./test-belenios-tool-runner.sh
                    cat ./demo-election-result.json | jq .
                    echo
                    echo "=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+="
                    echo
                    echo " Election Simulation finished !"
                    echo
                    echo "=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+="
                    echo
                    # --
                    #
                    # -- Builds the legacy server designed by the Belenios Team
                    docker-compose -f docker-compose.build.yml up -d belenios_backend_release_server
                    docker-compose -f docker-compose.build.yml logs -f belenios_backend_release_server

                    # -- Run the unit tests : a demo voting session will be performed
                    docker-compose -f docker-compose.build.yml up -d belenios_unit_tests
                    docker-compose -f docker-compose.build.yml logs -f belenios_unit_tests

workflows:
  version: 2.1
  build_belenios_tool:
    jobs:
      # - docker_build_and_push_approval:
          # type: approval
      - docker_build_belenios_tool
      # - docker_build_belenios_tool:
          # requires:
            # - docker_build_and_push_approval
          # context: cicd-orchestrator
          # filters:
            # branches:
              # ignore:
                # - master
                # - develop
                # # ---
                # - /^feature\/.*/
                # - /^support\/.*/
                # - /^bugfix\/.*/
                # - /^hotfix\/.*/
                # - /^release\/.*/
                # # ---
            # tags:
              # only:
                # - /^[0-9]+.[0-9]+.[0-9]+/
                # - /^[0-9]+.[0-9]+.[0-9]+-alpha/
                # - /^[0-9]+.[0-9]+.[0-9]+-beta/
